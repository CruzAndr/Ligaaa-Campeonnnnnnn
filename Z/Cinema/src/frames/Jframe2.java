package frames;


import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author metal
 */
public class Jframe2 extends javax.swing.JFrame {
      private final JsonObject movieDetails;  // Agrega este campo
      
 private javax.swing.JPanel castPanel;
    private javax.swing.JLabel directorLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel overviewLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel voteLabel;
    /**
     * Creates new form Jframe2
     */
  public Jframe2(JsonObject movieDetails) {
        initComponents();
        this.movieDetails = movieDetails;
        // Inicializa la interfaz gráfica según la información de la película
        // Puedes acceder a la información de la película desde movieDetails
        updateUI();
    }
  
    // Método para actualizar la información de la película
    public void updateMovieDetails(JsonObject movieDetails) {
        updateUI();
    }

    // Método para actualizar la interfaz gráfica según la información de la película
    private void updateUI() {
        if (movieDetails != null) {
            titleLabel.setText("Título: " + movieDetails.get("title").getAsString());
            overviewLabel.setText("Sinopsis: " + movieDetails.get("overview").getAsString());
            voteLabel.setText("Rating: " + movieDetails.get("vote_average").getAsDouble());

            // Actualiza la información del director
            String director = getDirector(movieDetails.getAsJsonObject("credits").getAsJsonArray("crew"));
            directorLabel.setText("Director: " + director);

            // Actualiza la información de los actores
            JsonArray cast = movieDetails.getAsJsonObject("credits").getAsJsonArray("cast");
            updateCastInfo(cast);
        }
    }

    // Método para actualizar la información de los actores
    private void updateCastInfo(JsonArray cast) {
        castPanel.removeAll();

        for (JsonElement castMember : cast) {
            String actorName = castMember.getAsJsonObject().get("name").getAsString();
            JLabel actorLabel = new JLabel("Actor: " + actorName);
            castPanel.add(actorLabel);
        }

        castPanel.revalidate();
        castPanel.repaint();
    }

    private String getDirector(JsonArray crew) {
        for (JsonElement crewMember : crew) {
            JsonObject crewObject = crewMember.getAsJsonObject();
            if ("Director".equals(crewObject.get("job").getAsString())) {
                return crewObject.get("name").getAsString();
            }
        }
        return "Desconocido";
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Ver Trailer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(318, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(243, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jframe2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jframe2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jframe2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jframe2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
SwingUtilities.invokeLater(new Runnable() {
    @Override
    public void run() {
        new Jframe2(movieDetails).setVisible(true);
    }
});

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
